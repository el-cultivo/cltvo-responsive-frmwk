///
///A Map containing the breakpoints used for the project, as weel as for generating the grid classes. The responsive mixins (respond-to, biggerThan and smallerThan) accept either the map keys, strings and variables, so there is no need to reference the map keys in any special way.
///
///Example of their use in a mixin: 
///		@include smallerThan(medio) {
///		   //Your code
///		}
///
///@type {map}

$breaks: (  xs: 480px, 
            sm: 768px, 
            md: 992px, 
            lg: 1200px
          );

@function b($break) {
	@return map-get($breaks, $break);

}

//Override Bootstrap's grid vars
// Extra small screen / phone
//** Deprecated `$screen-xs` as of v3.0.1
$screen-xs:                  b(xs);
//** Deprecated `$screen-xs-min` as of v3.2.0
$screen-xs-min:              $screen-xs;
//** Deprecated `$screen-phone` as of v3.0.1
$screen-phone:               $screen-xs-min;

// Small screen / tablet
//** Deprecated `$screen-sm` as of v3.0.1
$screen-sm:                  b(sm);
$screen-sm-min:              $screen-sm;
//** Deprecated `$screen-tablet` as of v3.0.1
$screen-tablet:              $screen-sm-min;

// Medium screen / desktop
//** Deprecated `$screen-md` as of v3.0.1
$screen-md:                  b(md);
$screen-md-min:              $screen-md;
//** Deprecated `$screen-desktop` as of v3.0.1
$screen-desktop:             $screen-md-min;

// Large screen / wide desktop
//** Deprecated `$screen-lg` as of v3.0.1
$screen-lg:                  b(lg);
$screen-lg-min:              $screen-lg;
//** Deprecated `$screen-lg-desktop` as of v3.0.1
$screen-lg-desktop:          $screen-lg-min;

// So media queries don't overlap when required, provide a maximum
$screen-xs-max:              ($screen-sm-min - 1);
$screen-sm-max:              ($screen-md-min - 1);
$screen-md-max: 			 ($screen-lg-min - 1);